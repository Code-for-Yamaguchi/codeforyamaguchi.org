/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 fuku-san.glb -t 
*/

import * as THREE from 'three'
import { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    ['huku-san']: THREE.Mesh
    HMD: THREE.Mesh
  }
  materials: {
    ['texture.001']: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/fuku-san.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes['huku-san'].geometry} material={materials['texture.001']} />
      <mesh geometry={nodes.HMD.geometry} material={materials['texture.001']} />
    </group>
  )
}

useGLTF.preload('/models/fuku-san.glb')
